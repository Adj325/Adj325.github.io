[{"title":"校网值班安排","url":"/2018/09/13/校网值班安排/","content":"\n# 校网值班安排\n\n\n\n## 值班要求\n\n1. 周一至周五，每天三个阶段\n\n2. 每个阶段需要新旧搭配，同部门\n\n3. 组织共36人早上均是2人，下午及晚上可能会安排3人\n\n   2人×3阶段×5天 = 30人，存在一天233，其他几天要么223要么232\n\n4. 周末值班，每人每学期安排一次即可\n\n\n## 数据文件\n\n1. **通讯录.txt**\n\n   内容应如下所示\n\n   ```txt\n   姓名,部门id,资历新1旧0\n   诸葛亮,1,0\n   牛魔王,1,0\n   牛魔王,2,0\n   ```\n\n   校网只有三个部门，id任取三个数字即可\n\n2. 课表文件\n\n   从教务系统下载学生的课表文件统一放在xls目录下，程序会读取课表中的姓名，把数据匹配给通讯录中的成员。\n\n   读取情况：\n\n   1. 旧课表\n\n      ```\n      你大爷 16154399.xls\n      警告：此为旧课表！\n      ```\n\n      若有此提示，则该课表为错误旧课表（每节课40分钟，存在三大节），旧课表的出现是因为没有足够的新课表给程序测试。\n\n      应向该成员索取新课表！\n\n   2. 警告：没有名叫“杜xx”的学生!\n\n      此提示可以忽略，杜xx不在通讯录中，所以才有此警告。\n\n\n\n## 算法\n\n遍历所有安排可能，使用KM算法。\n\n参考：[趣写算法系列之--匈牙利算法](https://blog.csdn.net/dark_scope/article/details/8880547)\n\n源代码: [JobArrange](https://github.com/Adj325/JobArrange)","tags":["KM"]},{"title":"Python3.x的验证码识别体验","url":"/2018/04/04/Python3.x的验证码识别体验/","content":"\n# Python3.x的验证码识别体验\n\n## 安装库\n\n安装PIL、pytesseract、tesseract-ocr\n\nPIL的安装中, 也许装64bit Python的电脑, 得安装32bit的wheel\n\npytesseract，我直接pip就安装就成功了\n\ntesseract-ocr, pip 安装失败, [Python 使用mingw构建第三方库 Unable to find vcvarsall.bat错误解决方法](https://blog.csdn.net/huobanjishijian/article/details/51915206)\n\n百度后，叫我下mingw64，找了一会找不到，最后就换别的解决方法了。\n\n最后，直接下载tesseract-ocr: [Windows环境安装tesseract-ocr 4.00并配置环境变量](https://www.cnblogs.com/jianqingwang/p/6978724.html)\n\n然后，运行时碰到错误: [windows下pytesseract识别验证码遇到的WindowsError: [Error 2] 的解决方法](https://blog.csdn.net/bigzhao_25/article/details/52350781)\n\n\n\n## 代码\n\n``` python\nimport pytesseract\nfrom PIL import Image\nimage = Image.open('yzm.jpg')\ncode = pytesseract.image_to_string(image)\nprint(code)\n```\n\n\n\n## 其它\n\n往17沃签到工具加了识别代码，但是用户体验极差，识别效果非常低，字符都交叉了。\n\n也试过二值化，但效果还是不好，得用别的算法去训练数据。\n\n所以只能先停下了，这次算体验体验了。\n\n\n\n## 搭配机器学习进行识别 2018-4-4\n\n参考帖子: [机器学习之验证码识别](https://blog.csdn.net/alis_xt/article/details/65627303)\n\n跟着这帖子弄好一段时间，折腾的是别的网站。\n\n最后，成功倒是成功了。\n\n可是过程中，遇到了很多问题！\n\nnumpy，pillow对我来说，还是不够熟悉，机器学习相关的库更是第一次使用！\n\n预分类那块...就很尴尬了。\n\n切割出来的单字符，pytesseract识别不了!\n\n目前，我也不知道为什么。\n\n由于那网站的验证码字符种类不多, 我最终选择手动分类了下！\n\n最后能成功识别了，体验还是很良好的！\n\n就是不知道为啥识别出来而已...还得好好学习.\n\n由于某种原因，不附上自己根据上面那帖子ctrl+c, ctrl+v出来的代码。","tags":["验证码"]},{"title":"Linuxmint 体验之旅","url":"/2018/02/03/Linuxmint体验之旅/","content":"\n# Linuxmint 体验之旅\n\n## 1. 安装\n\n- 安装\n\n  [教程](https://jingyan.baidu.com/article/9158e0003d7ba9a2541228cf.html)\n\n  > **安装 Linux Mint时候，请断开网络！**\n  > 由于联网安装采用默认的软件源，更新速度会非常慢。而且，在线更新使用的是外国人的方案，根本不适合中文用户。安装了 Linux Mint 18 后，默认的菜单字体出现是楷体，很不美观。而断网安装的用户，则字体是标准的思源黑体。\n\n- [安装Linuxmint黑屏解决](https://www.cnblogs.com/xiaoyulianjiao/p/5788468.html)\n\n  在启动时按e键修改grub启动项，  找到带`quiet splash --`那行，把`quiet splash --`删除，并在该行尾部加上`nomodeset nouveau.noaccel=1`\n\n  按F10启动，安装好之后，电脑重启时，也要加上“nomodeset”，之后进入系统后更新显卡驱动。\n\n  在更新显卡驱动时，由于Linuxmint18去掉了对  AMD  显卡私有驱动的支持，仅采用开源驱动。\n\n- UEFI启动的可能需要切换回传统的启动方式\n\n## 2. 更新源\n\n- 使用root用户更新，无需确认y\n\n```bash\n#deb cdrom:[Linux Mint 18.3 _Sylvia_ - Release amd64 20171127]/ xenial contrib main non-free\n\n#阿里云源\n# deb cdrom:[Ubuntu 16.04 LTS _Xenial Xerus_ - Release amd64 (20160420.1)]/ xenial main restricted\ndeb-src http://archive.ubuntu.com/ubuntu xenial main restricted\n\n#Added by software-properties\ndeb http://mirrors.aliyun.com/ubuntu/ xenial main restricted\ndeb-src http://mirrors.aliyun.com/ubuntu/ xenial main restricted multiverse universe \n\n#Added by software-properties\ndeb http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted\ndeb-src http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted multiverse universe\n\n#Added by software-properties\ndeb http://mirrors.aliyun.com/ubuntu/ xenial universe\ndeb http://mirrors.aliyun.com/ubuntu/ xenial-updates universe\ndeb http://mirrors.aliyun.com/ubuntu/ xenial multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ xenial-updates multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse\n#Added by software-properties\ndeb http://archive.canonical.com/ubuntu xenial partner\ndeb-src http://archive.canonical.com/ubuntu xenial partner\ndeb http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted\ndeb-src http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted multiverse universe\n#Added by software-properties\ndeb http://mirrors.aliyun.com/ubuntu/ xenial-security universe\ndeb http://mirrors.aliyun.com/ubuntu/ xenial-security multiverse\n\n#网易源\ndeb http://mirrors.163.com/ubuntu/ precise main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ precise-security main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ precise-updates main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ precise-proposed main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ precise-backports main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ precise main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ precise-security main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ precise-updates main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ precise-proposed main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ precise-backports main restricted universe multiverse\n\n#中科大源：\ndeb http://debian.ustc.edu.cn/ubuntu/ trusty main multiverse restricted universe\ndeb http://debian.ustc.edu.cn/ubuntu/ trusty-backports main multiverse restricted universe\ndeb http://debian.ustc.edu.cn/ubuntu/ trusty-proposed main multiverse restricted universe\ndeb http://debian.ustc.edu.cn/ubuntu/ trusty-security main multiverse restricted universe\ndeb http://debian.ustc.edu.cn/ubuntu/ trusty-updates main multiverse restricted universe\ndeb-src http://debian.ustc.edu.cn/ubuntu/ trusty main multiverse restricted universe\ndeb-src http://debian.ustc.edu.cn/ubuntu/ trusty-backports main multiverse restricted universe\ndeb-src http://debian.ustc.edu.cn/ubuntu/ trusty-proposed main multiverse restricted universe\ndeb-src http://debian.ustc.edu.cn/ubuntu/ trusty-security main multiverse restricted universe\ndeb-src http://debian.ustc.edu.cn/ubuntu/ trusty-updates main multiverse restricted universe\n\n#东北大学源\ndeb-src http://mirror.neu.edu.cn/ubuntu/ xenial main restricted\n#Added by software-properties\ndeb http://mirror.neu.edu.cn/ubuntu/ xenial main restricted\ndeb-src http://mirror.neu.edu.cn/ubuntu/ xenial restricted multiverse universe\n#Added by software-properties\ndeb http://mirror.neu.edu.cn/ubuntu/ xenial-updates main restricted\ndeb-src http://mirror.neu.edu.cn/ubuntu/ xenial-updates main restricted multiverse universe\n#Added by software-properties\ndeb http://mirror.neu.edu.cn/ubuntu/ xenial universe\ndeb http://mirror.neu.edu.cn/ubuntu/ xenial-updates universe\ndeb http://mirror.neu.edu.cn/ubuntu/ xenial multiverse\ndeb http://mirror.neu.edu.cn/ubuntu/ xenial-updates multiverse\ndeb http://mirror.neu.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse\ndeb-src http://mirror.neu.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse\n#Added by software-properties\ndeb http://archive.canonical.com/ubuntu xenial partner\ndeb-src http://archive.canonical.com/ubuntu xenial partner\ndeb http://mirror.neu.edu.cn/ubuntu/ xenial-security main restricted\ndeb-src http://mirror.neu.edu.cn/ubuntu/ xenial-security main restricted multiverse universe #Added by software-properties\ndeb http://mirror.neu.edu.cn/ubuntu/ xenial-security universe\ndeb http://mirror.neu.edu.cn/ubuntu/ xenial-security multiverse\n\n#清华大学源\n# deb cdrom:[Ubuntu 16.04 LTS _Xenial Xerus_ - Release amd64 (20160420.1)]/ xenial main restricted\ndeb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted\ndeb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted\ndeb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial universe\ndeb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates universe\ndeb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial multiverse\ndeb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates multiverse\ndeb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse\ndeb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted\ndeb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security universe\ndeb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security multiverse\n```\n\n\n\n## 3. 主机通过虚拟机转发上网\n\n详见：[Linux通过虚拟机上网](https://github.com/dcLunatic/Network-learning)\n\n原理：主机上的请求，全部丢到网关（虚拟机），再由虚拟机转发出去\n\n- 虚拟机上的操作\n\n  新建一个有线连接，开启共享网络（需要防火墙开启）\n\n  设置本地链接（以太网网卡）的ip（开启共享时，会自动修改这个ip）\n\n\n- 主机上的操作\n\n  新建一个有线连接，在IPV4处，填写以下信息\n\n  DNS：8.8.8.8\n\n  > DNS无碍\n\n  ipv4地址：虚拟机同一个网络段的ip\n\n  子网掩码：与虚拟机同样\n\n  > ipv4及子网掩码的设置，只是为了确保：主机能与虚拟机相互ping通\n  >\n  > 所以说，ip及掩码设成怎样都行，只要你能保证ping通就好！\n\n  网关：虚拟机使用的ip\n\n  > 这里不能乱改，必须是虚拟机使用的ip！\n\n- 注意\n\n  在所有设置都正确时，突然无法上网的话，可以把宽带断开再重连。\n\n  也可以试试重启虚拟机。\n\n  切记要打开kde网络设置中wifi左边那个开关，具体啥作用还不知道\n\n\n\n\n## 4. 操作\n\n\n\n### 4.1 [新建文件模板](http://forum.ubuntu.org.cn/viewtopic.php?f=38&t=288062)\n\n右键创建一个“新建脚本”，在/usr/share/templates/中建立一个新文件shell.desktop，文件内容如下：\n\n```\n[Desktop Entry]\nEncoding=UTF-8\nName=新建脚本.sh\nComment[zh_CN]=新建脚本\nType=Link\nURL=.source/script.sh\nIcon=konsole\n```\n\n 然后在/usr/share/templates/.source/中新建一个文件script.sh（名字和上面shell.desktop里面的url项指定的相同），就是一个空脚本，内容如下：\n\n```\n#!/bin/bash\n```\n\n> 作用： 点击“新建脚本时”\n>\n> 默认创建一个“新建脚本.sh”，内容是script.sh的内容，即`#!/bin/bash`\n\n\n\n### 4.2 切换root用户\n\n- sudo 命令\n- sudo su\n\n\n\n\n\n### 4.3 常用软件的英文名称\n\n|  中文含义  | 英文命令 |\n| :--------: | :------: |\n|    终端    | konsole  |\n| 文本编辑器 |   kate   |\n| 文件管理器 | dolphin  |\n\n\n### 4.4 虚拟机\n\n#### 4.4.1 无法拖拽文件\n\n- 法一\n\n  增强器可能没启动，重启下虚拟机里的系统即可！\n\n- 法二\n\n  重启VBoxTray.exe\n\n\n\n#### 4.4.2 返回主机\n\n右Ctrl\n\n\n\n#### 4.4.3 更换微信提示声音\n\n- 详见\n\n  [微信电脑版怎么修改信息提示音](http://blog.sina.com.cn/s/blog_e5c6a0ea0102xfx2.html)\n\n  [eXeScope 6.50汉化版](http://xiazai.zol.com.cn/detail/3/27055.shtml)\n\n  [铃声](http://www.lnpan.com/)\n\n  [mp3转wav](https://www.aconvert.com/cn/audio/mp3-to-wav/)\n\n- 注意\n\n  直接转换的wav文件太大（太大的文件无法成功替换资源），需要设置采样率为最低，才能减少文件大小\n\n\n### 4.5 截图工具\n\n#### 4.5.1 deepin-scrot\n\n- 介绍\n\n  这货长得像qq截图工具很棒的\n\n- 安装\n\n  `deepin-scrot`\n\n#### 4.5.2 spectacle\n\n- 介绍\n\n  方形截图，指针看不清\n\n   - 安装\n\n     自带的\n\n   - 命令\n     | 英文命令      | 中文含义  |\n     | ---------------- | ---------- |\n     | -f, --fullscreen        | 抓取整个桌面 (默认) |\n     | -m, --current           | 抓取当前屏幕       |\n     | -a, --activewindow      | 抓取活动窗口       |\n     | -u, --windowundercursor | 抓取鼠标指针位置的窗口，包括父窗口的弹出菜单   |\n     | -t, --transientonly     | 抓取鼠标指针位置的窗口，不包括父窗口的弹出菜单 |\n\n#### 4.5.3 shutter\n\n  - 安装\n\n    ```\n    sudo add-apt-repository ppa:shutter/ppa\n    sudo apt-get update\n    sudo apt-get install shutte\n    ```\n\n  - 命令及含义\n\n    |           中文含义           |     英文命令     |\n    | :--------------------------: | :--------------: |\n    |       抓取当前活动窗口       |    shutter -a    |\n    |         抓取整个屏幕         |    shutter -f    |\n    |         鼠标画框抓取         |    shutter -s    |\n    | 抓取任意活动窗口（不起作用） | shutter -section |\n    |           抓取网页           |  shutter --web   |\n\n\n\n### 4.6 KDE\n\n#### 4.6.1 窗口平铺\nctrl F8/9/0\n\n#### 4.6.2 窗口最小化\n\n 添加最小化小部件，设置快捷键\n\n#### 4.6.3 切换输入法皮肤\n\n在系统面板中找到输入法（也有可能隐藏了），右键->皮肤\n\n#### 4.6.4 拖拽图标\n\n移至图标**右上角**，按至左键即可拖动\n\n#### 4.6.5 更改图标大小\n\n鼠标左键，长按图标\n\n#### 4.6.6 禁用其它五笔等输入法\n\n打开输入法配置，左侧是可使用的输入法，右侧是目前使用的输入法\n\n把五笔移动至左侧即可\n\n#### 4.6.7 输入切换全/半角符号\n\n中文状态，启用英文符号\n\n`ctrl .`\n\n#### 4.6.8 从剪切板中复制\n\n`ctrl ;`\n\n#### 4.6.9 关闭窗口/程序\n\n- 关闭窗口\n\n  标准快捷键：`ctrl w`\n\n- 关闭程序\n\n  全局快捷点->kwin：`alt f4`\n\n\n### 4.7 删除楷体\n- 测试可行\n  \n   ```\n   sudo apt remove fonts-arphic-ukai fonts-arphic-uming\n   ```\n- 未测试\n   ```\n   sudo apt-get install language-selector-*\n   ```\n\n\n\n\n### 4.8 创建ftp服务器\n\n1. 安装vsftpd\n\n   `apt install vsftpd`\n\n2. 启动/关闭/重启/状态\n\n   `service vsftp start/restart/stop/status`\n\n3. 配置文件\n\n   - /etc/vsftpd.conf\n\n     - 匿名访问\n\n       匿名登陆，详见：\n\n       - [vsftpd匿名用户上传和下载的配置](https://blog.csdn.net/neonlight/article/details/5975764)\n       - [CentOS 6.3 下 vsftpd 匿名用户访问配置](https://www.jianshu.com/p/f90e0f81134b)\n\n     - 系统用户访问\n\n       ```\n       # 这个是登陆后访问的主目录\n       local_root=/xxxxx\n       chroot_local_user=YES\n       ```\n\n       仅是上面的命令时，会报错：[vsftpd：500 OOPS: vsftpd: refusing to run with writable root inside chroot ()](https://blog.csdn.net/u010383786/article/details/69526413)\n\n       解决方法：添加`allow_writeable_chroot=YES`\n\n       关于chroot，详见：[默认配置路径](https://blog.csdn.net/u010383786/article/details/69526413)\n\n     - 监狱\n\n       详见：[vsftpd配置chroot、限制登录用户的问题](http://blog.sina.com.cn/s/blog_12d07a0be0102v0zz.html)\n\n4. 测试\n\n   1. 启动服务\n\n      `service vsftpd start`\n\n   2. 查看本地ip（使用etherent，wan卡的ip都行）\n\n      `ifconfig`\n\n   3. 本地登陆\n\n      ```\n      ftp 本地ip或127.0.0.1\n      输入用户名\n      输入密码\n      ```\n\n      > 如果无法登陆，查看上面的报错，一般来说都是配置出了问题\n\n   4. 手机访问\n\n      > 据我所知，手机与电脑也只能通过wifi达到处在同一局域网的效果\n      >\n      > 所以，这里的主机本地ip，一般指的是wan卡中的ip\n\n      - FX文件管理器\n\n        网络-ftp服务器-输入主机本地ip及其他信息\n\n        默认配置下，中文会乱码\n\n        需要添加`utf8_filesystem=YES`\n\n      - ES文件管理器\n\n        网络-ftp-自动搜索-长按编辑登陆信息\n\n        默认配置下，中文不会乱码\n\n   5. 用途\n\n      手机管理/浏览电脑端的文件\n\n      文件管理器也支持创建ftp服务器，这样的话，也方便电脑端对手机进行文件的管理\n\n   6. 相关链接\n\n      1. [Linux下使用vsftp搭建FTP服务器实现文件共享](https://www.linuxidc.com/Linux/2017-06/144900.htm)\n\n### 4.9 开机自动挂载分区\n\n详见：[ubuntu14.04设置开机自动挂载硬盘分区－wd](https://blog.csdn.net/up_com/article/details/51264872)\n\n- blkid\n\n  通过此命令，查看硬盘uuid\n\n- 修改/etc/fstab\n\n  `UUID=具体的uuid 被挂载的目录 硬盘格式 defaults 0 0`\n\n  > 被挂载的目录中，不能含有中文名字\n\n\n\n\n### 4.10 输入法的使用技巧\n\n一般建议，使用Shift进行输入法的中/英文切换！\n\n这样的切换，按Shift就又可回中/英文！\n\n使用组合键的切换时，在切到中文时，无法使用Shift切到英文，只能使用组合键切换！\n\n\n\n### 4.11 开启aria2\n\n- 安装\n\n  `sudo apt install aria2c`\n\n- 配置文件\n\n  ```\n  #####################################################################  文件保存相关\n  \n  # 文件的保存路径(可使用绝对路径或相对路径)，默认: 当前启动位置\n  dir=/home/adj/下载/\n  \n  # 启用磁盘缓存，0为禁用缓存，需1.16以上版本，默认:16M\n  #disk-cache=32M\n  \n  # 文件预分配方式，能有效降低磁盘碎片，默认:prealloc\n  # 预分配所需时间: none < falloc ? trunc < prealloc\n  # falloc和trunc则需要文件系统和内核支持\n  # NTFS建议使用falloc，EXT3/4建议trunc，MAC下需要注释此项\n  file-allocation=none\n  \n  # 断点续传\n  continue=true\n  \n  \n  \n  ##################################################################### 下载连接相关\n  \n  # 最大同时下载任务数，运行时可修改，默认:5\n  #max-concurrent-downloads=5\n  \n  # 同一服务器连接数，添加时可指定，默认:1\n  max-connection-per-server=16\n  \n  # 最小文件分片大小，添加时可指定，取值范围1M -1024M，默认:20M\n  # 假定size=10M，文件为20MiB 则使用两个来源下载; 文件为15MiB 则使用一个来源下载\n  min-split-size=10M\n  \n  # 单个任务最大线程数，添加时可指定，默认:5\n  #split=5\n  \n  # 整体下载速度限制，运行时可修改，默认:0\n  #max-overall-download-limit=0\n  \n  # 单个任务下载速度限制，默认:0\n  #max-download-limit=0\n  \n  # 整体上传速度限制，运行时可修改，默认:0\n  #max-overall-upload-limit=0\n  \n  # 单个任务上传速度限制，默认:0\n  #max-upload-limit=0\n  \n  # 禁用IPv6，默认:false\n  #disable-ipv6=true\n  \n  # 连接超时时间，默认:60\n  #timeout=60\n  \n  # 最大重试次数，设置为0表示不限制重试次数，默认:5\n  #max-tries=5\n  \n  # 设置重试等待的秒数，默认:0\n  #retry-wait=0\n  \n  \n  \n  ##################################################################### 进度保存相关\n  \n  # 从会话文件中读取下载任务\n  input-file=/home/adj/aria2/aria2.session\n  # 在Aria2退出时保存`错误/未完成`的下载任务到会话文件\n  save-session=/home/adj/aria2/aria2.session\n  # 定时保存会话，0为退出时才保存，需1.16.1以上版本，默认:0\n  #save-session-interval=60\n  \n  \n  \n  #####################################################################RPC相关设置\n  \n  # 启用RPC，默认:false\n  enable-rpc=true\n  \n  # 允许所有来源，默认:false\n  rpc-allow-origin-all=true\n  \n  # 允许非外部访问，默认:false\n  rpc-listen-all=true\n  \n  # 事件轮询方式，取值:[epoll，kqueue，port，poll，select]，不同系统默认值不同\n  #event-poll=select\n  \n  # RPC监听端口，端口被占用时可以修改，默认:6800\n  #rpc-listen-port=6800\n  \n  # 设置的RPC授权令牌，v1.18.4新增功能，取代 --rpc-user 和 --rpc-passwd 选项\n  #rpc-secret=<TOKEN>\n  \n  # 设置的RPC访问用户名，此选项新版已废弃，建议改用 --rpc-secret 选项\n  #rpc-user=<USER>\n  \n  # 设置的RPC访问密码，此选项新版已废弃，建议改用 --rpc-secret 选项\n  #rpc-passwd=<PASSWD>\n  \n  # 是否启用 RPC 服务的 SSL/TLS 加密，\n  # 启用加密后 RPC 服务需要使用 https 或者 wss 协议连接\n  #rpc-secure=true\n  \n  # 在 RPC 服务中启用 SSL/TLS 加密时的证书文件，\n  # 使用 PEM 格式时，您必须通过 --rpc-private-key 指定私钥\n  #rpc-certificate=/path/to/certificate.pem\n  \n  # 在 RPC 服务中启用 SSL/TLS 加密时的私钥文件\n  #rpc-private-key=/path/to/certificate.key\n  \n  ##################################################################### BT/PT下载相关\n  \n  # 当下载的是一个种子(以.torrent结尾)时，自动开始BT任务，默认:true\n  #follow-torrent=true\n  \n  # BT监听端口，当端口被屏蔽时使用，默认:6881-6999\n  listen-port=51413\n  \n  # 单个种子最大连接数，默认:55\n  #bt-max-peers=55\n  \n  # 打开DHT功能，PT需要禁用，默认:true\n  enable-dht=false\n  \n  # 打开IPv6 DHT功能，PT需要禁用\n  #enable-dht6=false\n  \n  # DHT网络监听端口，默认:6881-6999\n  #dht-listen-port=6881-6999\n  \n  # 本地节点查找，PT需要禁用，默认:false\n  #bt-enable-lpd=false\n  \n  # 种子交换，PT需要禁用，默认:true\n  enable-peer-exchange=false\n  \n  # 每个种子限速，对少种的PT很有用，默认:50K\n  #bt-request-peer-speed-limit=50K\n  \n  # 客户端伪装，PT需要\n  peer-id-prefix=-TR2770-\n  user-agent=Transmission/2.77\n  \n  # 当种子的分享率达到这个数时，自动停止做种，0为一直做种，默认:1.0\n  seed-ratio=0\n  \n  # 强制保存会话，即使任务已经完成，默认:false\n  # 较新的版本开启后会在任务完成后依然保留.aria2文件\n  #force-save=false\n  \n  # BT校验相关，默认:true\n  #bt-hash-check-seed=true\n  \n  # 继续之前的BT任务时，无需再次校验，默认:false\n  bt-seed-unverified=true\n  \n  # 保存磁力链接元数据为种子文件(.torrent文件)，默认:false\n  bt-save-metadata=true\n  ```\n\n- 使用\n\n  - 简单下载\n\n    `aria2 -d 保存的目录 “下载链接”`\n\n  - RPC模式\n\n    `aria2 --conf-path=配置文件路径`\n\n    允许airia2后台运行，-D\n\n    `aria2 --conf-path=配置文件路径 -D`  \n\n- 教程\n\n  [Aria2基础上手指南](https://zhuanlan.zhihu.com/p/30666881)\n\n\n\n\n### 4.11 BaiduPCS-Go\n\n- 下载\n\n  项目主页：[BaiduPCS-Go](https://github.com/iikira/BaiduPCS-Go)\n\n  发布主页：[BaiduPCS-Go Realses](https://github.com/iikira/BaiduPCS-Go/releases)\n\n- 使用\n\n  Windows直接点击exe，就可进入命令行界面\n\n  Linux需要在终端输入`BaiduPCS-Go的路径`来打开BaiduPCS-Go，必须是完整路径\n\n  或者切到BaiduPCS-Go所在的目录下，输入`./BaiduPCS-Go`来打开BaiduPCS-Go\n\n  也可以创建软链接到`usr/bin/`，这样的话，就可以直接不用输入完整路径，仅输入BaiduPCS-Go就可进入下命令行界面\n\n\n\n\n### 4.12 PATH与执行程序\n\n- PATH\n\n  终端执行`$PATH`查看系统环境变量，在终端输入的`程序名`都会到环境变量中的目录中的目录找一次，有就执行，没有就提示不存在！\n\n- 假设程序叫APP，所在目录是`/home/adj/程序/`\n\n  - 程序在环境变量的某个目录中，输入`APP`\n  - 环境不在环境变量的任何目录中\n    - 输入`/home/adj/程序/APP`\n    - 切到`/home/adj/程序/`，输入`./APP`\n\n- PATH与当前目录\n\n  `.`代表当前目录，只要把其添加到PATH中，在程序所在的目录下时，就可以直接输入`APP`\n\n  当不建议这样做，假如当前目录有个`cd`的病毒文件，在我们输入`cd`时，由于系统会在当前目录下找，所以有可能会先执行不正确的`cd`病毒文件，这时候，我们就gg了！\n\n  详见：《鸟叔的Linux私房菜》的11章的1.3节\n\n- 设置环境变量\n\n  详见：[Linux环境变量总结](https://www.jianshu.com/p/ac2bc0ad3d74)\n\n\n\n### 4.13 查找文件\n\n详见：[Linux下各种查找命令（find, grep, which, whereis, locate）](https://blog.csdn.net/wzzfeitian/article/details/40985549)\n\n\n\n### 4.14 安装指定版本的软件\n\n- 查看可安装版本\n\n  `apt-cache policy app`\n\n- 安装指定版本\n\n  `apt install app=0.9.48-1`\n\n- 更多\n\n  详见：[apt-get install 的一个疑问](http://forum.ubuntu.org.cn/viewtopic.php?f=77&t=133010&sid=d4200a0dea9219c2f9b50039fd8824b9)\n\n\n\n### 4.15 网易云音乐的使用\n\n直接点图标，无法使用，即使加`--no sandbox`也一样！、\n\n只能使用超级用户启动网易云音乐\n\n`sudo netease-could-music &`\n\n加`&`，可以让程序后台运行\n\n\n\n\n\n\n## 5. 问题\n\n### 5.1 安装程序后不显示\n\n安装软件，无论是deb包或者是从软件市场安装，都不会在kde程序菜单中显示。\n\n```\nsudo apt-get update\nsudo apt-get update --reinstall plasma-workspace\n```\n\n\n\n### 5.2 Open JDK 环境变量配置和使用问题\n\n我个人安装的Linux Mint 18.1 自带的Open JDK 8不完整，在终端输入一下命令更新完整包：\n\n```\nsudo apt-get install openjdk-8-jdk\n```\n\n\n\n### 5.3 创建热点后，手机端不可见/热点无法使用\n\n1. 系统自带热点\n\n   - 教程\n\n     详见：[超简单让ubuntu开启wifi热点(亲测16.04与14.04可用)](http://www.cnblogs.com/king-ding/p/ubuntuWIFI.html)\n\n   - 创建热点后，手机端不可见\n\n     关键点：\n\n     - 模式：热点/接入点\n     - 电脑连上刚创建的wifi，手机才能看到那wifi\n\n   - 热点无法使用\n\n     稍等一会试试\n\n     断开宽带，再连接热点试试\n\n   - 体验\n\n     体验很差，一开始能用，后来就突然无法使用，倒是能使用vsftpd的服务\n\n     可是无法上网，只有连上热点的一瞬间，能上网\n\n     看过路由转发表，没有错误，目标是无线网卡所在的ip的，都转发到了0.0.0.0\n\n     一瞬间能上网、能使用vsftpd，其实也证明了电脑与手机能相互通信\n\n     无法上网，我想过是驱动问题\n\n     也试过安装新的驱动，安装一些乱七八糟的，最后没搞成功\n\n     也看过系统日志，开启热点时，无法构造信号或无法取得对象\n\n     相关：[Ubuntu 12.04 no wlan0 interface](https://askubuntu.com/questions/563647/ubuntu-12-04-no-wlan0-interface) \n\n\n  2. 使用hostapd开热点\n\n     - 教程\n\n       [ubuntu14.04开启wifi热点](https://blog.csdn.net/gsls200808/article/details/39370597)\n\n\n### 5.4 雷柏v500键位不对\n\n首先，看看windows锁定键有没有亮，亮的话按下它关闭锁定。\n\n不行的话，详见：[解决雷柏V500机械键盘在LINUX系统中CTRL/ALT等键被错误映射成SHIFT的问题](http://www.myefly.com/linux-rapoo-v500-issue.html)\n\n\n\n### 5.5 Typora无法正常复制\n\n应该是版本有bug，我装的0.9.51-1，有些网页无法正常复制为md格式。\n\n解决方法：装旧版0.9.48-1。\n\n命令：`apt install typora=0.9.48-1`\n\n\n\n### 5.6 Ctrl+Alt+F10，突然黑屏\n\n这一类快捷键用于切换桌面\n\nCtrl+Alt+F7切回当前桌面\n\n详见：[Why does Shift-Ctrl-Alt-F10 kill my desktop?](https://ubuntuforums.org/showthread.php?t=1167144)\n\n\n\n### 5.7 wireshark无法使用\n\n- you don't have permission to capture on that device\n\n  https://blog.csdn.net/huangpin815/article/details/76851227\n\n- failed to set hardware filter to promiscuous mode\n\n  https://blog.csdn.net/cscmaker/article/details/7240486\n\n- dofile has been disabled due to running Wireshark as superuser.\n\n  https://www.cnblogs.com/tom-and-jerry/p/3957193.html\n\n### 5.8 权限不够\n\n给文件file加上可执行权限： `chmod +x file`","tags":["Linux"]},{"title":"Selenium与requests相互更换cookies","url":"/2018/02/03/Selenium与requests相互更换cookies/","content":"\n# Selenium与requests相互更换cookies\n\n\n\n## selenium获取cookies给requests\n\n``` python\n# 登录后, 从selenium中获取cookies\ncookies = browser.get_cookies()\n```\n- 法一: session\n\n  ``` python\n  # 创建一个session的请求对象\n  s = requests.session()\n  # 遍历\n  for cookie in cookies:\n      s.cookies.set(cookies['name'], cookies['value'])\n  ```\n\n- 法二: header\n\n  ``` python\n  # 请求头中cookies键的值\n  cookiestr = ''\n  # 连接有效cookies值\n  for cookie in cookies:\n      cookiestr = cookiestr + cookies['name'] + '=' + cookies['value'] + ';' + ' '\n  headers['cookies'] = cookiestr\n  ```\n\n\n\n## requests获取cookies给selenium\n\n``` python\n# 创建一个session的请求对象\nsession = requests.session()\n....\ncookies = session.cookies\ncookiesstr = '; '.join(['='.join(item) for item in cookies.items()])\n```\n","tags":["cookies"]},{"title":"Selenium作死总结","url":"/2018/02/03/Selenium作死总结/","content":"\n# Selenium作死总结\n\n**说明: 这个笔记很多是个人总结, 当然也有些内容是先搜索后复制, 修改, 总结而来的.**\n\n## 个人感受\n\n折腾了selenium这么久, **'所见即所得'**, 是我最大的体会了!\n1. 呈现在网页的内容, 你都能通过selenium找到.\n2. 你当前看到的, 就是你当前仅能操作的\n    - 网页源代码page_source实时更新\n    - 不可对不在网页上的元素进行操作\n3. 框架frame是个坑\n    - page_source仅是当前框架的源代码\n    - 在某些网站, 由于程序速度快于浏览器速度, 可能你成功切入了一个框架, 但该框架却没有显示出来, 于是你后面的操作都出错了!\n4. 浏览器需要**不确定**的时间去执行你的命令\n5. 可以考虑根据页面内容及当前url判断页面有没有发生改变\n6. 涉及id的定位方式都存在不稳定性, 可以考虑切换为link_text\n7. send_keys()方法可能会出现内容发送不完整的情况\n\n## 常见问题\n\n### 01. 浏览网页登录, 登录框\n- 解决方法:\n  http://username:password@the-site.com\n\n### 02. Screenshot: available via screen\n- 无法找到元素\n   - 使用phantomjs时, 未设置窗口大小, 导致元素不可见: 设置下窗口大小 \n\n###  03. Element is not clickable at point(x, y). Other element would receive the click\n- 无法点击元素, 否则将点击到别的元素\n   - 元素被遮挡: 想法弄走遮盖元素, 或暂停一会让其自动消失\n   - 元素未出现在窗口内: 下拉滚动条, 使元素出现\n   - 元素未获得焦点: 使其获得焦点\n\n### 04. No such Frame 或 Unable to locate element\n- 没有此框架 或 无法找到元素\n   - 框架/元素未加载: 显式/隐式等待, 添加暂停\n   - 元素在框架内: 切换到框架\n   - 元素的定位不正确(动态id或class): 更改定位方法\n   - 由于未知原因, 无法定位: 更换定位方法, xpath或css selector\n     补充: 从浏览器直接copy出来的xpath路径, 以前能用, 现在却不能用, 换为css却行了!\n     初步怀疑是路径的问题, '/html/body/div/section/section[4]/div[2]/ul/li[4]', 由于对xpath的了解不够多, 所以尚未从根源上解决!\n   - 动态路径: 根据网页内容, 动态更改路径\n\n### 05. element is not attached to the page\n- 元素不在当前页面\n   - 页面的刷新使元素对象发生改变: 重新定位元素\n   - 元素归属于旧页面(另外一个url)的: 无解 \n\n### 06. send_keys报错\n- 浏览器不兼容\n   - 降低浏览器版本\n- 接受体元素不对\n   - 找到对应的接收体元素\n\n### 06. Compound class names not permitted\n- 无法定位复合类(class=\"tile div\")\n   - 取其中独特的类名, 或使用其它定位方法\n\n### 07. page_source可见不可得\n- 框架原因(page_source仅是显示当前框架的实时内容)\n  - 切入更新的框架, 再取得它的page_source\n### 08. call function result missing 'value'\n- 驱动与浏览器版本不符合, 浏览器偷偷升级了\n  - 更新为合适的驱动\n\n## 常用函数\n### 01. 获取cookies\n```python\ncookie = driver.get_cookies()\ncookieList = ['{}={}'.format(item[\"name\"], item[\"value\"])  for item in cookie] \ncookiestr = '; '.join(cookieList)\n```\n\n### 02. 获取网页源代码\n- driver.page_source\n  注意, 网页源代码是实时更新的\n\n### 03. 获取当前网址\n- driver.current_url \n  注意, 网页网址是实时更新的\n\n### 04. frame框架切换\n- 切换到id为child_frame的框架: driver.switchTo().frame(\"child_frame\")\n\n  切换回默认框架: driver.switchTo().defaultContent()\n\n  框架的切换是一层一层, 由外到里的\n\n  切进内框架后, 必须在**切回外框架**后, 才能对外框架的元素进行操作\n\n- 传入id、name、index以及selenium的WebElement对象来切换框架\n\n  传入index时, 0指的是第一个子框架, 不是根框架!\n\n- 由于不可知原因, 对子框架进行操作时, 有时得多次切换回到默认框架, 再切进子框架, 然后才能对子框架进行操作\n\n\n### 05. 获取标签属性\n- tag.get_attribute(attributename)\n  a.get_attribute('href')\n\n## 延时, 显/隐式等待\n### 01. time.sleep()\n- 延时, 固定等待时长\n\n### 02. Implicit Waits（隐式等待）(修改自: [简书 半个王国](https://www.jianshu.com/p/bf27aad96614))\n- 隐式等待是在尝试发现某个元素的时候，如果没能立刻发现，就==等待固定长度的时间==(默认为0秒)，等待完成后, 成功发现元素或抛出异常。一旦设置了隐式等待时间，它的作用范围就是Webdriver对象实例的整个生命周期。\n\n  1. 若无法成功找到元素, 就会等待固定时长后再去寻找\n  2. 默认0秒, 即: 找不到元素后, 没有等待时长, 于是不再寻找该元素, 直接抛出异常\n  3. 整个生命周期, 设置一次, 再程序结束前都有效\n\n  隐式等待有时不好用, 程序执行很快, 但是浏览器, 网络很慢, 可能造成每个操作都要等待固定时长\n\n  `driver.implicitly_wait(seconds)` \n\n### 03. Explicit Waits（显式等待）(修改自: [简书 半个王国](https://www.jianshu.com/p/bf27aad96614))\n - 对于特定元素, 指定某个条件，然后设置最长等待时间。在这个时间内不断尝试寻找元素，找不到便会抛出异常。只有该条件触发，才执行后续代码。\n\n    1. 特定元素, 针对不是所有元素\n    2. 某个条件, 对于不同元素有不同的等待条件\n\n - ```python\n     WebDriverWait(driver=driver, timeout=300, poll_frequency=0.5, ignored_exceptions=None).until(EC.xx((By.xx, 'xx')))\n     ```\n\n  driver：浏览器驱动\n  timeout：最长超时等待时间(s)\n  poll_frequency：检测的时间间隔，默认为500ms\n  ignore_exception：超时后抛出的异常信息，默认情况下抛 NoSuchElementException 异常\n  ```\n\n - until() 或者 until_not()\n\n    ```python\n    until(method, message='')\n    调用该方法体提供的回调函数作为一个参数，直到返回值为True\n\n    until_not(method, message='')\n    调用该方法体提供的回调函数作为一个参数，直到返回值为False\n  ```\n\n - WebDriverWait(driver, timeout).until(EC.xx((By.xx,  \"xx\")))\n\n    | EC   | 预期条件 |\n    | ---- | -------- |\n    |  title_is | 判断当前页面的title是否等于预期 |\n    |  title_contains | 判断当前页面的title是否包含预期字符串 |\n    |  presence_of_element_located | 判断某个元素是否被加到了dom树里，并不代表该元素一定可见 |\n    |  visibility_of_element_located | 判断某个元素是否可见. 可见代表元素非隐藏，并且元素的宽和高都不等于0 |\n    |  visibility_of | 跟上面的方法做一样的事情，只是上面的方法要传入locator，这个方法直接传定位到的element就好了 |\n    |  presence_of_all_elements_located | 判断是否至少有1个元素存在于dom树中。举个例子，如果页面上有n个元素的class都是'column-md-3'，那么只要有1个元素存在，这个方法就返回True |\n    |  text_to_be_present_in_element | 判断某个元素中的text是否包含了预期的字符串 |\n    |  text_to_be_present_in_element_value | 判断某个元素中的value属性是否包含了预期的字符串 |\n    |  frame_to_be_available_and_switch_to_it | 判断该frame是否可以switch进去，如果可以的话，返回True并且switch进去，否则返回False |\n    |  invisibility_of_element_located | 判断某个元素中是否不存在于dom树或不可见 |\n    |  element_to_be_clickable - it is Displayed and Enabled | 判断某个元素中是否可见并且是enable的，这样的话才叫clickable |\n    |  staleness_of | 等某个元素从dom树中移除，注意，这个方法也是返回True或False |\n    |  element_to_be_selected | 判断某个元素是否被选中了,一般用在下拉列表 |\n    |  element_located_to_be_selected | 判断某个元素是否被选中了,一般用在下拉列表 |\n    |  element_selection_state_to_be | 判断某个元素的选中状态是否符合预期 |\n    |  element_located_selection_state_to_be | 跟上面的方法作用一样，只是上面的方法传入定位到的element，而这个方法传入locator |\n    |  alert_is_present | 判断页面上是否存在alert |\n\n- By: 定位方式 \n\n实际使用中, 发现显/隐式等待, 对Python环境自带的IDE, 支持不好; 用pycharm执行不会报错, 用自带的就遇到了很多问题.\n\n## 常用js操作\n### 01. [js 下拉滚动条](https://blog.csdn.net/jlminghui/article/details/50477283)\n- 移动到元素element对象的“顶端”与当前窗口的“顶部”对齐 \n  `driver.execute_script(\"arguments[0].scrollIntoView();\", element); `\n  `driver.execute_script(\"arguments[0].scrollIntoView(true);\", element); `\n\n- 移动到元素element对象的“底端”与当前窗口的“底部”对齐 \n  `driver.execute_script(\"arguments[0].scrollIntoView(false);\", element); `\n\n- 移动到页面最底部 \n  `driver.execute_script(\"window.scrollTo(0, document.body.scrollHeight)\"); `\n\n- 移动到指定的坐标(相对当前的坐标移动)\n  `driver.execute_script(\"window.scrollBy(0, 700)\"); `\n  结合上面的scrollBy语句，相当于移动到700+800=1600像素位置 \n  `driver.execute_script(\"window.scrollBy(0, 800)\"); `\n\n- 移动到窗口绝对位置坐标，如下移动到纵坐标1600像素位置 \n  `driver.execute_script(\"window.scrollTo(0, 1600)\"); `\n- 结合上面的scrollTo语句，仍然移动到纵坐标1200像素位置 \n  driver.execute_script(\"window.scrollTo(0, 1200)\");`\n\n- 移动到指定元素(根据**css选择器**定位)\n  `driver.execute_script('''$('html,body').animate({scrollTop:$(css选择器位置).offset().top}, 800);''')\n\n### 02. js 构造表单实现提交\n``` javascript\n function post(URL, PARAMS) {\n\tvar temp_form = document.createElement(\"form\");\n\ttemp_form.action = URL;\n\ttemp_form.target = \"_self\";\n\ttemp_form.method = \"post\";\n\t temp_form.style.display = \"none\";\n\tfor (var x in PARAMS) {\n\t\tvar opt = document.createElement(\"textarea\");\n\t\topt.name = x;\n \t\topt.value = PARAMS[x];\n\t\ttemp_form.appendChild(opt);\n\t}\n\tdocument.body.appendChild(temp_form);\n\ttemp_form.submit();\n}\npost('register', {'name':'nidaye', 'pwd':'hello'});\n```\n### 03. js 其它操作\n- 关闭当前窗口\n  window.close();\n\n## 某个关于Element is not clickable at point的issue\n[Chrome - Element is not clickable at point · Issue #2766 · SeleniumHQ/selenium-google-code-issue-archive](https://github.com/seleniumhq/selenium-google-code-issue-archive/issues/2766)\n","tags":["Selenium"]},{"title":"可以考勤, 拒绝刷脸!","url":"/2018/02/03/可以考勤, 拒绝刷脸!/","content":"\n# 烤鸡翅介绍\n\n[TOC]\n\n## 1. 软件介绍\n\n### 1.1 软件功能\n\n**不用刷脸！**\n\n每次刷脸时，随便拍就好，用于人脸验证的是用户使用**烤鸡翅**选择的照片，上传的也是本地的照片！\n\n### 1.2 使用环境\n\nAndroid，ROOT，Xposed\n\n经测试，Android 4~7的都能用。\n\n由于6，7系统的不同，虽然做了动态申请权限有些权限，但有可能还是需要自己主动去给权限。\n\n### 1.3 操作介绍\n\n在烤鸡翅界面，有4个开关，开关成功启用时，背景会变绿。\n\n- Hook， 是否启用软件功能\n- Toast，是否启用toast调试\n- XposedLog，是否启用Xposed的日志输出功能\n- KjcLog，是否把日志输出到/mnt/sdcard/Android/kjc/error.log\n\n点击空白界面或按钮，可以调用相册选取一张照片，刷脸时会用它覆盖本地验证照片。照片选取后，会被裁剪成450×600的分辨率。\n\n打开考勤软件后，软件启用时，会弹出一条Toast，告知用户开关的启用状态及照片的最后更新时间。\n\n刷脸后，也会有条Toast告知用户，本地验证图片的id及覆盖照片的结果（成功或失败）。\n\n> 如果不成功，应该就是你本地的照片有问题了！\n>\n> 你可以乱拍，成功的话就直接上传覆盖照片; \n>\n> 否则，就是烤鸡翅没法正常使用(出Bug了)，这时，你就刷脸吧！\n\n### 1.4 软件名称、图标及版本\n- 名称\n\n  考勤助手？烤你大爷啊！烤鸡翅！\n\n- 图标\n\n  就是一个中指手势\n\n- 版本\n\n  [砂锅粉](https://image.baidu.com/search/index?tn=baiduimage&ct=201326592&lm=-1&cl=2&ie=gbk&word=%C9%B0%B9%F8%B7%DB&fr=ala&ala=1&alatpl=adress&pos=0&hs=2&xthttps=111111)，是一种很棒的粮食。\n\n## 2. “破解”介绍\n\n### 2.1 考勤软件用到的框架\n\n考勤软件为了适配IOS及Android，该软件使用了Cordova，Angular，inoic。\n\n### 2.2 JS解析引擎\n\n之所以能\"破解\"它，达到前面的效果。\n\n就是因为它使用了Cordova，Cordova通过js调用系统原生功能，而所有的js调用最后都会调用Cordova一个的Js解析引擎。\n\n> Cordova提供了一组设备相关的API，通过这组API，移动应用能够以JavaScript访问原生的设备功能，如摄像头、麦克风等。\n>\n> Cordova还提供了一组统一的JavaScript类库，以及为这些类库所用的设备相关的原生后台代码。\n>\n> Cordova支持如下移动操作系统：iOS, Android,ubuntu phone os, Blackberry, Windows Phone, Palm WebOS, Bada 和 Symbian。\n\n通过查看Cordova的源代码，可以发现在`org.apache.cordova.engine.SystemExposedJsApi`这个类下，有个`exec`方法，所有的js调用，最终都会调用`exec`。\n\n```java\n// 相关源代码\npublic String exec(int bridgeSecret, String service, String action, String callbackId, String arguments) throws JSONException, IllegalAccessException {\n        return bridge.jsExec(bridgeSecret, service, action, callbackId, arguments);\n    }\n```\n\n1. service - 类库/插件名\n2. action - 类库/插件名中具体的方法名\n3. arguments - 参数\n\n### 2.3 刷脸时，做了什么\n\n在调试输出时，发现了两个关键之处：\n\n1. Face.verify(\"学生学号\",  \"刷脸时拍下的照片的路径\")\n2. FileTrasfer.upload(\"刷脸时拍下的照片的路径\",  \"签到url\", **)\n\n用户刷脸后，软件会调用Face.verify，在本地进行照片的验证。\n\n若验证通过（存在人脸），就会通过FileTrasfer.upload把照片传到服务器。\n\n### 2.4 破解思路\n\n- 优雅\n\n  只要拦截Face.verify，就可以通过arguments获取照片路径，在方法调用前，用本地照片覆盖它，就可以达到，无论咋拍，验证的都是本地照片，上传的都是本地的照片。\n\n- 暴力\n\n  优雅的方法，我们得本地存几类照片，不断地切换照片。照片最终还是会传到服务器，管理员还是能看到我们的照片！\n\n  这样多不好啊！\n\n  由于它只是本地验证人脸，服务器那边的检验，目前来说，应该就有人工验证而已。（我不会告诉你我为啥知道这点的！）\n\n  所以，我们可以在“优雅”的基础上，拦截FileTrasfer.upload，在方法调用前，把照片给弄坏（如替换成0kb的文件）！\n\n  服务器那边就无法看到我们的照片，可是服务器能看到我们的**验证通过**的状态。\n\n  只要咬定软件出问题，谁也无法折腾你，谁让它验证通过了呢？\n  \n  软件并未提供此功能，有需要请自己实现！\n\n### 2.5 一些对源代码的介绍\n\n写了4个java文件：\n\n- Data.java\n\n  用它获取一些文件的路径\n\n  对配置信息进行读取和写入\n\n- Freedom.java\n\n  Xp主程序，不描述了\n\n- MainActivity.java\n\n  页面程序\n\n- Tool.java\n\n  用于获取时间，输出日志，切割照片\n\n## 3. 事外之言\n\n### 3.1 使用环境的限制\n\n由于这软件用了“腾讯乐固”加壳，目前的我，**没法脱壳**，也因此导致软件使用环境的限制。\n\n没有ROOT的朋友，可以自行了解下VirtualXposed。\n\n不过，成功率不高，我与我的同学测试后，仅有一台Android 6.0的z17 mini能在VirtualXposed的环境下使用正常Xposed，考勤助手及烤鸡翅。\n\n### 3.2 Xposed用到的ClassLoader\n\nXP hook method时， 需要提供一个classloader。\n\n这个玩意，我也是取巧获得而已。\n\n反编译它，由于有壳，只能看到用于加壳的代码，在`com.tencent.StubShell.TxAppEntry`的方法中，有个方法`c`，它被调用时接收到一个context，通过context.getClassLoader()就能拿到classloader。\n\n### 3.3 蓝牙呢？\n\n功力有限，没法脱壳，目前没把蓝牙折腾成功，软件使用时必须得在蓝牙范围内。\n\n精力有限，不用刷脸已经满足了我的需求，最近或以后应该是不会再去折腾蓝牙的了。\n\n> 没脱壳前，只能通过XP把与蓝牙有关的类的方法都给hook，在方法调用前后都输出下给方法参数及类的属性（可以通过反射获取），或许有某些类的属性，方法参数就是关键的！\n>\n> 脱壳后，直接看Face的源代码吧，壳都能脱了，具体怎么做也不用我说了！\n\n### 3.4 建议、意见及其它\n\n- 建议\n\n  程序写得很一般，来啊，请把你的改进push进来！\n\n- 意见\n\n  请用MD写下你的意见，然后发给我！\n\n- 其它\n\n  折腾它吧，蓝牙也贼恶心的！\n\n  折腾成功的话，发我一份，谢谢！\n  \n\n### 3.5 蓝牙验证解决方案_2018.07.08\n\n- 脱壳工具\n  \n  [Fdex2](https://bbs.pediy.com/thread-224105.htm)\n  \n- 折腾\n\n  在于同学的折腾中，我们使用Fdex2对考勤助手进行脱壳，拿到了源代码。看到了Ble及Face库的代码，在其中，并没有发现早前猜想的蓝牙算法。若模块中不存在蓝牙协商算法，那算法就有可能在js中，经过很恶心的分析后，什么也没得到，代码混淆得太厉害了。\n  \n  在这个过程中，我们不断地分析旧日志，再次确定了，应该不存在蓝牙协商算法。蓝牙发射器应该仅是广播一种特殊信号，手机搜蓝牙时会能区分手机/音频设备，所以说，考勤助手调用蓝牙模块查看周围的蓝牙设备，若存在特殊的蓝牙设备，就允许有课的用户进行签到。\n  \n  如此，只要拦截BlueteethLePlugin的execute中的startScan(实质是该类的b(Json..., CallBack..)方法)，每次都手动添加一个特殊设备就可实现：在哪里都可以签到！设备的特殊性，也是需要拦截调试后获取。\n  \n  由于蓝牙发射设备被学校收回去了，以上的思路都还没真正地去执行。\n  \n- 无需xposed\n\n  由于获取到了真正解密后的dex，只要修改smail，达到加载本地照片，永远特殊蓝牙就好！\n  \n  修改后，需要把AndroidManifest.xml\n  ```\n   <application android:allowBackup=\"true\" android:hardwareAccelerated=\"true\" android:icon=\"@drawable/icon\" android:label=\"@string/app_name\" android:name=\"com.tencent.StubShell.TxAppEntry\" android:supportsRtl=\"true\">\n  ```\n  中的com.tencent.StubShell.TxAppEntry改成com.mybofeng.assist.MainActivity后，才能打开软件。\n  ","tags":["Xposed"]},{"title":"常见编码问题解决方法","url":"/2018/02/03/常见编码问题解决方法/","content":"\n# 常见编码问题解决方法\n\n## 字节对象\n- 常见的解决方法是, 轮询可能编码, 进行解码\n- 详见: \n    - [编码探讨: 该以什么编码打开\"gb2312\"文本?](http://blog.csdn.net/bluedamage/article/details/73312665)\n\n## 编码文本\n- \\\\u\n  - s = '\\\\u4e2d'\n  - python3: s.encode('utf-8').decode('unicode-escape')\n  - python2: s.decode('unicode-escape'')\n  - 详见: \n    - [Python3 使用 unicode-escape 处理 unicode 16进制字符串编解码问题](http://blog.csdn.net/chuatony/article/details/72628868)\n\n    - [Python编程-字符串的编码转换、存储及乱码问题](http://www.qmailer.net/archives/251.html)\n\n- \\\\x\n  - python3: '\\xe4\\xb8\\xad'.encode('raw_unicode_escape').decode('utf-8')\n  - python2: \ns = '\\xe4\\xb8\\xad'\nb = repr('\\xe4\\xb8\\xad')\nunicode(eval(b),\"gbk\") \n  - 详见:\n    - [Python入门：input获取\\xe4\\xb8\\xad字符正确解码](http://blog.csdn.net/foryouslgme/article/details/54948394)\n\n## URL编码与解码\n- python2/3\n  - urllib.quote(string[, safe])：对字符串进行编码。参数 safe 指定了不需要编码的字符\n  - urllib.unquote(string) ：对字符串进行解码\n","tags":["编码"]},{"title":"漫画下载(乙女漫画 极速漫画)","url":"/2018/02/03/漫画下载(乙女漫画 极速漫画)/","content":"\n# 漫画下载\n\n- 爬取网站\n\n  1. [极速漫画](http://tel.1kkk.com)\n\n  2. [乙女漫画](http://www.nokiacn.net/)\n\n- 过程分析\n\n  图片是采用ajax获取的，各采用不同反爬策略。\n\n  分析后，有以下结论。\n\n  **1. 乙女漫画**\n\n    关键js：http://www.nokiacn.net/template/skin2/css/d7s/js/show.20170501.js?20180620083618\n\n    关键变量：qTcms_S_m_murl_e，qTcms_S_m_murl\n\n    调试方法：复制js内容到pycharm，不断删减灰色无用字段，最后找到qTcms_S_m_murl及qTcms_S_m_murl_e\n\n    数据获取过程：访问到某漫画的某章节后，后端会把该章节的所有照片链接拼接起来，然后通过base64加密，并把加密后的字符串返回给前端。\n\n  **2. 极速漫画**\n\n    关键js：http://css99tel.cdndm5.com/v201808091405/blue/js/chapternew_v22.js\n\n    关键方法：ajaxloadimage()\n\n    关键变量：DM5_*\n\n    数据获取过程：访问到某漫画的某章节后，后端会返回一个DM5密钥，使用此密钥访问chapterfun.ashx会得到一段混淆后的js，执行后得到两张图片(当前页与下一页)的下载链接。\n\n    难点：需要使用session，需要动态变化headers，js的获取链接只能拼接(data=data，会获取不到脚本;data=data不行，可能是因为没把/及空格给转码。)，js的执行需要调用selenium（execjs及pyv8都不行）。\n\n    > PS：不直接使用selenium，主要是因为打开漫画首页会持续加载，不会自行停止。selenium的控制也是较麻烦的。\n\n- 最后\n\n  是为了看《徒然喜欢你》才写的脚本的，在爬取其他漫画时，有些细节也许需要自行修改。\n\n     \n","tags":["漫画"]},{"title":"Python爬虫小总结","url":"/2018/02/03/爬虫小总结/","content":"\n# Python爬虫小总结\n\n\n\n## 1. POST还是GET?\n\n请求网页，我们主要用到的GET和POST。\n\n一般来说，对某个url，我们使用get或post去请求，都能得到预想中的内容。\n\n有些情况，服务器会在某个url上，会针对POST和GET的请求的不同，做出不同的反应。\n\n某些服务器，在某个url的响应下，只做了POST的响应，这时就GET不到了。\n\n请求不到内容时，不妨这里想想。\n\n\n\n## 2. 正则提取不了想要的内容\n\n很多时候我们会用到(.*?)来匹配内容，如果内容间出现了换行符\\n(.可以匹配除了换行符（\\n）以外的任意一个字符)，那你就无法得到内容！\n\n针对换行，你看到的换行字符可能是**\\r\\n**, 也有可能只是**\\n**。\n\n针对空格，有可能是键盘敲出来的空格' '，也有可能是ASCII码中的控制字符。\n\n往往**所见不是所得**，最好直接复制内容，这样能避免很多问题的出现！\n\n\n\n## 3. 乱码\n\n详见: [常见编码问题解决方法](https://github.com/Adj325/Python/blob/master/WebSpiders/decode-encode/常见编码问题解决方法.md)\n\n注意: 若出现部分乱码，应该是编码集不够大。\n\n如对以gbk进行编码的文本，却使用gb2312对其进行解码，就会出现部分乱码。\n\n> 以utf-8去解码以utf-8编码的response，无法得到中文，得到的都是\\x字符。\n>\n> 此时，headers中要删除`'accept-encoding': 'gzip, deflate, br',`\n>\n> response.content.decode('utf-8')后，即可得到正常编码。\n\n## 4. 被封ip了\n\n爬取速率过高了，**添加延迟**及**使用代理ip**即可\n\n\n\n## 5. headers中一定要包含抓包中的所有东西么?\n\n一句话，你永远不可能提前知道服务器需要检测什么。\n\n哪些url可以精简，哪些键值对不需要，你得自己测试!\n\n\n\n## 6. selenium与requests更换cookies\n\n详见: [Selenium与requests相互更换cookies](https://github.com/Adj325/Python/blob/master/Selenium/Selenium%E4%B8%8Erequests%E7%9B%B8%E4%BA%92%E6%9B%B4%E6%8D%A2cookies.md)\n\n\n\n## 7. data={}，键值对都正确，获取不到数据\n\n使用data={}，默认以utf8的方式把非英文字符以url%形式编码。\n\n存在一些服务器，是以gb方式解码用户的请求。\n\n这种情况下，客户端以utf方式编码请求，服务端以gb方式解码请求，数据不搭配，自然获取不到数据。\n\n解决方法：\n\n- 法一\n\n  自行gb方式编码 并 拼接url\n\n- 法二\n\n  拼接url，再urllib.quote(encoding='相应编码')\n\n\n此外，对于同一个网站，某些url需要将空格替换为+，有些url则可能需要另作处理。\n\n总之，灵活变化。\n\n\n\n## 8. 其它问题\n\nsession中频繁更换ua，有可能会起反作用。\n\n每一次拨号，会更换一次ip，可以考虑被反爬时，断开连接再重新拨号。\n\n\n\n## 9. 好吧, 没了\n\n其实，如果你完全根据抓包所得的请求方式来请求，问题就会减少很多。\n\n","tags":["总结"]}]